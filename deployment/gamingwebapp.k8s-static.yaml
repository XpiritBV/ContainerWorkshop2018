apiVersion: v1
kind: Service
metadata:
  name: svc-gamingwebapp
  labels:
    version: dev
    product: RetroGaming
spec:
  selector:
    app: gamingwebapp
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
---
apiVersion: v1
kind: Service
metadata:
  name: svc-sqldata
  labels:
    version: dev
    product: RetroGaming
    app: sqldata
spec:
  selector:
    app: sqldata
  ports:
    - port: 1433
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: svc-leaderboardwebapi
  labels:
    version: dev
    product: RetroGaming
spec:
  selector:
    app: leaderboardwebapi
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dep-gamingwebapp
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gamingwebapp
    spec:
      containers:
      - name: gamingwebapp
        terminationMessagePath: "/tmp/gamingwebapp-log"
        image: __containerregistry__/gamingwebapp:demo
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ASPNETCORE_URLS
          value: http://0.0.0.0:80
        - name: LeaderboardApiOptions__BaseUrl
          value: http://svc-leaderboardwebapi
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: "0.10"
      imagePullSecrets:
        - name: pullkey
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dep-leaderboardwebapi
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: leaderboardwebapi
    spec:
      containers:
      - name: leaderboardwebapi
        terminationMessagePath: "/tmp/leaderboardwebapi-log"
        image: __containerregistry__/leaderboardwebapi:demo
        imagePullPolicy: Always
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: ASPNETCORE_URLS
          value: http://0.0.0.0:80
        - name: ConnectionStrings__LeaderboardContext
          value: Server=svc-sqldata;Database=Leaderboard;User Id=sa;Password=Pass@word;Trusted_Connection=False
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: "0.10"
      imagePullSecrets:
        - name: pullkey
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-data-volume
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dep-sqldata
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sqldata
    spec:
      containers:
      - name: sqldata
        image: microsoft/mssql-server-linux
        resources:
          limits:
            cpu: 100m
            memory: 600Mi
        env:
        - name: SA_PASSWORD
          value: Pass@word
        - name: MSSQL_PID
          value: Developer
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_MEMORY_LIMIT_MB
          value: "512"
        ports:
        - containerPort: 1433
        volumeMounts:
          - mountPath: "/var/opt/mssql/data"
            name: data-volume
      nodeSelector:
        beta.kubernetes.io/os: linux
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: mssql-data-volume